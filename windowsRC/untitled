from twisted.internet import reactor, task, error,defer
from twisted.internet.protocol import DatagramProtocol
from twisted.internet.defer import Deferred, gatherResults, maybeDeferred


class UDPServer(DatagramProtocol):

	startedDeferred = None

	def datagramReceived(self, data, (host, port)):
		print "datagramReceived:"+data


s = UDPServer()
d = s.startedDeferred = defer.Deferred()
p = reactor.listenUDP(7000, server)

def stop():
	def dfbstop(ignored):
		return p.stopListening()
		print "stop called"
	return d.addCallback(dfbstop)

reactor.run()

